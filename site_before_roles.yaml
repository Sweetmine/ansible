---

- hosts: all
  become: true
  pre_tasks:

  - name: update repo cache (CentOS/RedHat)
    tags: always
    dnf:
      update_cache: yes
    changed_when: false
    when: ansible_distribution in ["RedHat", "CentOS"]

  - name: update repo cache (Ubuntu)
    tags: always
    apt:
      update_cache: yes
    changed_when: false
    when: ansible_distribution == "Ubuntu"


- hosts: all
  become: true
  tasks:

  - name: add ssh key for simone
    tags: always
    authorized_key:
      user: simone
      key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDw4HGziDLOnZnzzqc1CKzVl4g8KqbXlv+JIh96QwdV4 ansible"

- hosts: server
  become: true
  tasks:

  - name: install unzip
    package:
      name: unzip

  - name: install terraform
    unarchive:
      src: https://releases.hashicorp.com/terraform/1.1.8/terraform_1.1.8_linux_amd64.zip
      dest: /usr/local/bin
      remote_src: yes
      mode: 0755
      owner: root
      group: root  

  - name: Install packages for Each OS Distribution
    tags: tmux,apache
    package:
      name: 
        - "{{ tmux_package }}"
        - "{{ apache_package }}"
      state: latest

  - name: change email-address for admin
    tags: apache,httpd
    lineinfile: 
      path: /etc/httpd/conf/httpd.conf
      regexp: '^ServerAdmin'
      line: ServerAdmin ansible@demo.com
    when: ansible_distribution in ["RedHat", "CentOS"]
    register: httpd

  - name: restart httpd (RedHat, CentOS)
    tags: apache,httpd
    service:
      name: httpd
      state: restarted
    when: httpd.changed   
         
  - name: copy default html file for site
    tags: apache
    copy:
      src: default_site.html
      dest: /var/www/html/index.html
      owner: root
      group: root
      mode: 0644

  - name: start httpd (RedHat/CentOS)
    tags: apache, httpd
    service:
      name: httpd
      state: started
      enabled: yes
    when: ansible_distribution in ["RedHat", "CentOS"]

- hosts: node
  become: true
  tasks:

  - name: Install mariadb package (RedHat/CentOS)
    tags: redhat,db,mariadb
    dnf:
      name: mariadb
      state: latest
    when: ansible_distribution in ["RedHat", "CentOS"]

  - name: Install mariadb package ("Ubuntu")
    tags: ubuntu,db,mariadb
    apt:
      name: mariadb
      state: latest
    when: ansible_distribution == "Ubuntu"
